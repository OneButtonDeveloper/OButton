// Generated by CoffeeScript 1.10.0
(function() {
  kango.addMessageListener('click', function(event) {
    var Commits, Day;
    if (window.location.toString().indexOf('github') > 0) {
      if ($('#andrew0304').length > 0) {
        return;
      }
      $('body').css('margin-top', '120px').prepend(Handlebars.templates.git_commits_box());
      Commits = (function() {
        function Commits() {}

        Commits.commits = {};

        Commits.authors = {};

        Commits.put = function(day, author, commit) {
          var base, commitOfAuthor, commits, commitsOfAuthor, hasCommit, j, len;
          commits = Commits.commits;
          day = commits[day] != null ? commits[day] : commits[day] = {};
          commitsOfAuthor = day[author] != null ? day[author] : day[author] = [];
          hasCommit = false;
          for (j = 0, len = commitsOfAuthor.length; j < len; j++) {
            commitOfAuthor = commitsOfAuthor[j];
            if (commit === commitOfAuthor) {
              hasCommit = true;
              break;
            }
          }
          if (!hasCommit) {
            commitsOfAuthor.push(commit);
            if ((base = Commits.authors)[author] == null) {
              base[author] = 0;
            }
            return Commits.authors[author] += 1;
          }
        };

        Commits.print = function() {
          var author, authors, c, comits, count, day, days, j, len, ref, result, value;
          days = (function() {
            var ref, results;
            ref = Commits.commits;
            results = [];
            for (day in ref) {
              value = ref[day];
              results.push(day);
            }
            return results;
          })();
          days.sort();
          result = '';
          for (j = 0, len = days.length; j < len; j++) {
            day = days[j];
            result += day.split('-').reverse().join('.') + '\n';
            authors = Commits.commits[day];
            count = 0;
            ref = Commits.authors;
            for (author in ref) {
              c = ref[author];
              count++;
            }
            if (count > 1) {
              for (author in authors) {
                comits = authors[author];
                result += '\n' + author + ':\n' + comits.join('. ') + '.';
              }
            } else {
              for (author in authors) {
                comits = authors[author];
                result += '\n' + comits.join('. ') + '.';
              }
            }
            result += '\n\n';
          }
          return result;
        };

        Commits.drawAuthors = function() {
          var $stat, author, count, ref, results;
          $stat = $('#stat0304').empty();
          ref = Commits.authors;
          results = [];
          for (author in ref) {
            count = ref[author];
            results.push($stat.append('<tr><td style="letter-spacing: 1px; font-weight: 300;"> ' + author + ' </td><td style="text-align: center;"> â€“ </td><td style="font-weight: 300;"> ' + count + ' </td></tr>'));
          }
          return results;
        };

        Commits.drawPrint = function() {
          $("#commits0304").val(Commits.print());
          $('#commits0304').focus().select();
          return document.execCommand('copy');
        };

        Commits.clear = function() {
          Commits.commits = {};
          Commits.authors = {};
          $("#commits0304").val('');
          return $('#stat0304').empty();
        };

        return Commits;

      })();
      $('#clear0304').on('click', function() {
        return Commits.clear();
      });
      $('#print0304').on('click', function() {
        return Commits.drawPrint();
      });
      Day = (function() {
        Day.monthsNames = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split('_');

        Day.monthsNumbers = "01_02_03_04_05_06_07_08_09_10_11_12".split('_');

        Day.prototype.monthNumber = function(mmm) {
          var i, j;
          if (!Day.month) {
            Day.month = {};
            for (i = j = 0; j < 12; i = j += 1) {
              Day.month[Day.monthsNames[i]] = Day.monthsNumbers[i];
            }
          }
          return Day.month[mmm];
        };

        function Day(title) {
          var day, titleParts;
          titleParts = title.replace(',', '').split(' ').reverse();
          day = titleParts[1];
          if (day && day.length < 2) {
            day = '0' + day;
          }
          this.title = titleParts[0] + '-' + this.monthNumber(titleParts[2]) + '-' + day;
        }

        Day.prototype.addCommit = function(author, text) {
          var j, len, line, lines, result;
          if (text) {
            lines = text.split('\n');
            result = '';
            if (lines && lines.length > 0) {
              for (j = 0, len = lines.length; j < len; j++) {
                line = lines[j];
                if (line && line.length > 0) {
                  if (line.indexOf('Merge branch') < 0 && line.indexOf('Conflicts:') < 0) {
                    result += line;
                  } else {
                    break;
                  }
                }
              }
              if (result && result.length > 0) {
                return Commits.put(this.title, author, result.replace(/\.\s*$/, "").replace('  ', ''));
              }
            }
          }
        };

        return Day;

      })();
      return $('#parse0304').on('click', function() {
        var day, result;
        result = [];
        day = null;
        $(".commits-listing").children().each(function(i, el) {
          var $el;
          $el = $(el);
          if (el.tagName === 'DIV') {
            $el.find(".octicon").remove();
            return result.push(day = new Day($el.text().trim()));
          } else {
            if (el.tagName === 'OL') {
              return $el.children().each(function(i, el) {
                var $com, author, text;
                $com = $(el);
                text = $com.find('.commit-title .message').first().attr('title').trim();
                author = $com.find('.commit-author').first().text();
                return day.addCommit(author, text);
              });
            }
          }
        });
        return Commits.drawAuthors();
      });
    }
  });

}).call(this);
